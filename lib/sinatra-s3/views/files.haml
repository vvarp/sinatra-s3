%p Click on a file name to get file details.
%table
  %caption
    - if defined?(Git)
      %span{ :style => "float:right" }
        - if !@bucket.versioning_enabled?
          %a{ :href => "/control/buckets/#{@bucket.name}/versioning", :onClick => S3::POST } Enable Versioning For This Bucket
        - else
          Versioning Enabled
    %a{ :href => "/control/buckets" } &larr; Buckets
  %thead
    %tr
      %th File
      %th Size
      %th Permission
  %tbody
    - if @files.empty?
      %tr
        %td{ :colspan => "3", :style => "padding:15px;text-align:center" } No Files
    - @files.each do |file|
      %tr
        %td
          %a{ :href => "javascript:///", :onclick => "$('details-#{file.id}').toggle()" } #{file.name}
          %div.details{ :id => "details-#{file.id}", :style => "display:none" }
            - if @bucket.versioning_enabled? && !file.git_object.nil?
              %p Revision: #{file.git_object.objectish}
            - if file.torrent
              %p #{file.torrent.seeders} seeders &bull; #{file.torrent.leechers} leechers &bull; #{file.torrent.total} downloads
            %p Last modified on #{file.updated_at}
            %p
              %a{ :href => signed_url("/#{@bucket.name}/#{file.name}"), :target => "_blank" } Get
              &bull;
              %a{ :href => "/control/acl/#{@bucket.name}/#{file.name}", :onclick => S3::POPUP } Access
              &bull;
              %a{ :href => "/control/meta/#{@bucket.name}/#{file.name}", :onclick => S3::POPUP } Meta
              &bull;
              - if @bucket.versioning_enabled?
                %a{ :href => "/control/changes/#{@bucket.name}/#{file.name}", :onclick => S3::POPUP } Changes
                &bull;
              - if defined?(RubyTorrent)
                %a{ :href => signed_url("/#{@bucket.name}/#{file.name}") + "&torrent", :target => "_blank" } Torrent
                &bull;
              %a{ :href => "/control/delete/#{@bucket.name}/#{file.name}", :onclick => S3::POST, :title => "Delete file #{file.name}" } Delete
        %td #{number_to_human_size(file.size)}
        %td #{file.access_readable}
%div#results
%div#progress-bar{ :style => "display:none" }
%iframe#upload{ :name => "upload", :style => "display:none" }
- @upid = Time.now.to_f
- form_options = { :action => "?upload_id=#{@upid}", :id => "upload-form", :method => 'post', :enctype => 'multipart/form-data' }
- form_options.merge!({ :onsubmit => "UploadProgress.monitor('#{@upid}')", :target => "upload" }) if $UPLOAD_PROGRESS
%form.create{ form_options }
  %h3 Upload a File
  %div.required
    %input{ :name => "upfile", :type => "file" }
  %div.optional
    %label{ :for => "fname"} File Name
    %input{ :name => "fname", :type => "text" }
  %div.required
    %label{ :for => "facl" } Permissions
    %select{ :name => "facl" }
      - S3::CANNED_ACLS.sort.each do |acl, perm|
        - opts = { :value => perm }
        - opts[:selected] = true if perm == @bucket.access
        %option{ opts } #{acl}
  %input#newfile{ :name => "newfile", :value => "Create", :type => "submit" }
